theme_minimal()
ggplot(genres_melt, aes(x = year, fill = genre)) +
stat_summary(geom = "area", position = "stack", fun = "length", aes(y = count)) +
labs(title = "Table 6: Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies") +
theme_minimal()
# Select genres columns
genres_columns <- c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short")
# Get the 5 most common genres
top_genres <- movies %>%
summarise(across(all_of(genres_columns), sum)) %>%
pivot_longer(cols = starts_with("genre"), names_to = "genre", values_to = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Select genres columns
genres_columns <- c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short")
# Get the 5 most common genres
top_genres <- movies %>%
summarize(across(all_of(genres_columns), sum)) %>%
pivot_longer(cols = starts_with("genre"), names_to = "genre", values_to = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Select genres columns
genres_columns <- c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short")
# Get the 5 most common genres
top_genres <- movies %>%
summarise(across(all_of(genres_columns), sum)) %>%
pivot_longer(cols = starts_with("genre"), names_to = "genre", values_to = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Select genres columns
genres_columns <- c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short")
# Get the 5 most common genres
top_genres <- genres_columns %>%
summarise(across(all_of(genres_columns), sum)) %>%
pivot_longer(cols = starts_with("genre"), names_to = "genre", values_to = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Select genres columns
genres_columns <- c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short")
# Get the 5 most common genres
top_genres <- genres_columns %>%
summarize(across(all_of(genres_columns), sum)) %>%
pivot_longer(cols = starts_with("genre"), names_to = "genre", values_to = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Select genres columns
genres_columns <- c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short")
# Get the 5 most common genres
top_genres <- movies %>%
summarize(across(all_of(genres_columns), sum)) %>%
pivot_longer(cols = starts_with("genre"), names_to = "genre", values_to = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
ggplot(na.omit(movies), aes(x = year, y = rating)) +
geom_pointrange(stat = "summary", fun.data = mean_cl_boot) +
labs(title = "Table 4: Average Ratings per Year",
x = "Year",
y = "Rating")
ggplot(na.omit(movies), aes(x = year, y = rating)) +
stat_summary(fun.data = "mean_cl_boot", geom = "pointrange") +
labs(title = "Ratings of Movies per Year", x = "Year", y = "Ratings")
ggplot(na.omit(movies), aes(x = year, y = rating)) +
geom_pointrange(stat = "summary", fun.data = mean_cl_boot) +
labs(title = "Table 4: Average Ratings per Year",
x = "Year",
y = "Rating")
# Reshape the data
movies_melt=melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
movies_subset=subset(movies_melt, value == 1)
# Count the occurrences of each genre per year
genre_counts=aggregate(value ~ year + variable, data= movies_subset, FUN=length)
colnames(genre_counts) = c("year", "genre", "count")
# Reshape the data from wide to long format
movies_melted=melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
movies_subset=subset(movies_melted, value == 1)
# Count the occurrences of each genre per year
genre=aggregate(value ~ year + variable, data=movies_subset, FUN=length)
colnames(genre) = c("year", "genre", "count")
# Find the 5 most common genres
top_genres=movies %>%
select(Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%
summarise_all(list(~sum(. > 0))) %>%
gather(key = "genre", value = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Reshape the data and calculate average ratings per year and genre for the top genres
ratings=movies %>%
select(year, rating, all_of(top_genres)) %>%
gather(key = "genre", value = "has_genre", -year, -rating) %>%
filter(has_genre > 0) %>%
group_by(year, genre) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE))
# Plot the line chart
ggplot(ratings, aes(x = year, y = avg_rating, color = genre, group = genre)) +
geom_line() +
labs(title = "Average Ratings per Year and Genre",
x = "Year",
y = "Average Rating",
color = "Genre") +
theme_minimal()
# Reshape the data
movies_melt=melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
movies_subset=subset(movies_melt, value == 1)
# Count the occurrences of each genre per year
genre_counts=aggregate(value ~ year + variable, data= movies_subset, FUN=length)
colnames(genre_counts) = c("year", "genre", "count")
# Reshape the data from wide to long format
movies_melted=melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
movies_subset=subset(movies_melted, value == 1)
# Count the occurrences of each genre per year
genre=aggregate(value ~ year + variable, data=movies_subset, FUN=length)
colnames(genre) = c("year", "genre", "count")
# Find the 5 most common genres
top_genres=movies %>%
select(Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%
summarise_all(list(~sum(. > 0))) %>%
gather(key = "genre", value = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Reshape the data and calculate average ratings per year and genre for the top genres
ratings=movies %>%
select(year, rating, all_of(top_genres)) %>%
gather(key = "genre", value = "has_genre", -year, -rating) %>%
filter(has_genre > 0) %>%
group_by(year, genre) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE))
# Plot the line chart
ggplot(ratings, aes(x = year, y = avg_rating, color = genre, group = genre)) +
geom_line() +
labs(title = "Average Ratings per Year and Genre",
x = "Year",
y = "Average Rating",
color = "Genre") +
theme_minimal()
genres_melt = melt(movies, id.vars = c("year"), measure.vars = c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
genres_subset = subset(movies_melt, value == 1)
genre_counts = aggregate(value ~ year + variable, data= movies_subset, FUN=length)
colnames(genre_counts) = c("year", "genre", "count")
ggplot(genres_melt , aes(x = year, group = genre, color = genre)) +
stat_summary(geom = "line", position = "stack", fun = "length", aes(y = count)) +
labs(title = "Table 5: Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies") +
theme_minimal()
ggplot(genre_counts, aes(x = year, y = count, color = genre, group = genre)) +
geom_line() +
labs(title = "Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies",
color = "Genre") +
theme_minimal()
library(ggplot2)
library(plyr)
library(dplyr)
library(reshape2)
library(Hmisc)
library(tidyr)
movies <- read.table(file='moviesA.csv', header = TRUE, sep = ",")
head(movies)
movies0020 <- movies %>% filter(year >= 1900 & year <= 1920)
ggplot(data = movies0020, aes(x = as.factor(year))) +
geom_bar(width = 0.5,
fill = "lightgreen",
color = "black",
alpha = 0.8,
position = "dodge") +
labs(title = "Table 1: Movies from 1900 to 1920", x = "Year", y = "Count of Movies")
ggplot(movies, aes(x = as.factor(year))) +
stat_summary(fun = "length", geom = "point", aes(y = year)) +
labs(title = "Table 2: Count of Movies per Year as factor", x = "Year", y = "Count of Movies")
ggplot(movies, aes(x = as.numeric(year))) +
stat_summary(fun = "length", geom = "point", aes(y = year)) +
labs(title = "Table 3: Count of Movies per Year as numeric", x = "Year", y = "Count of Movies")
ggplot(na.omit(movies), aes(x = year, y = rating)) +
geom_pointrange(stat = "summary", fun.data = mean_cl_boot) +
labs(title = "Table 4: Average Ratings per Year",
x = "Year",
y = "Rating")
genres_subset <- movies[, c("year", "Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short")]
genres_melt <- melt(genres_subset, id.vars = "year", variable.name = "genre", value.name = "count")
genres_melt <- subset(genres_melt, count == 1)
ggplot(genres_melt , aes(x = year, group = genre, color = genre)) +
stat_summary(geom = "line", position = "stack", fun = "length", aes(y = count)) +
labs(title = "Table 5: Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies") +
theme_minimal()
ggplot(genres_melt, aes(x = year, fill = genre)) +
stat_summary(geom = "area", position = "stack", fun = "length", aes(y = count)) +
labs(title = "Table 6: Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies") +
theme_minimal()
# Reshape the data
genres_melt=melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
movies_subset=subset(movies_melt, value == 1)
# Count the occurrences of each genre per year
genre_counts=aggregate(value ~ year + variable, data= movies_subset, FUN=length)
colnames(genre_counts) = c("year", "genre", "count")
# Reshape the data from wide to long format
movies_melted=melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
movies_subset=subset(movies_melted, value == 1)
# Count the occurrences of each genre per year
genre=aggregate(value ~ year + variable, data=movies_subset, FUN=length)
colnames(genre) = c("year", "genre", "count")
# Find the 5 most common genres
top_genres=movies %>%
select(Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%
summarise_all(list(~sum(. > 0))) %>%
gather(key = "genre", value = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Reshape the data and calculate average ratings per year and genre for the top genres
ratings=movies %>%
select(year, rating, all_of(top_genres)) %>%
gather(key = "genre", value = "has_genre", -year, -rating) %>%
filter(has_genre > 0) %>%
group_by(year, genre) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE))
# Plot the line chart
ggplot(ratings, aes(x = year, y = avg_rating, color = genre, group = genre)) +
geom_line() +
labs(title = "Average Ratings per Year and Genre",
x = "Year",
y = "Average Rating",
color = "Genre") +
theme_minimal()
# Reshape the data from wide to long format
genres_melt = melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
genres_subset = subset(movies_melted, value == 1)
# Count the occurrences of each genre per year
genre=aggregate(value ~ year + variable, data=movies_subset, FUN=length)
colnames(genre) = c("year", "genre", "count")
# Find the 5 most common genres
top_genres=movies %>%
select(Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%
summarise_all(list(~sum(. > 0))) %>%
gather(key = "genre", value = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Reshape the data and calculate average ratings per year and genre for the top genres
ratings=movies %>%
select(year, rating, all_of(top_genres)) %>%
gather(key = "genre", value = "has_genre", -year, -rating) %>%
filter(has_genre > 0) %>%
group_by(year, genre) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE))
# Plot the line chart
ggplot(ratings, aes(x = year, y = avg_rating, color = genre, group = genre)) +
geom_line() +
labs(title = "Average Ratings per Year and Genre",
x = "Year",
y = "Average Rating",
color = "Genre") +
theme_minimal()
library(ggplot2)
library(plyr)
library(dplyr)
library(reshape2)
library(Hmisc)
library(tidyr)
movies <- read.table(file='moviesA.csv', header = TRUE, sep = ",")
head(movies)
movies0020 <- movies %>% filter(year >= 1900 & year <= 1920)
ggplot(data = movies0020, aes(x = as.factor(year))) +
geom_bar(width = 0.5,
fill = "lightgreen",
color = "black",
alpha = 0.8,
position = "dodge") +
labs(title = "Table 1: Movies from 1900 to 1920", x = "Year", y = "Count of Movies")
ggplot(movies, aes(x = as.factor(year))) +
stat_summary(fun = "length", geom = "point", aes(y = year)) +
labs(title = "Table 2: Count of Movies per Year as factor", x = "Year", y = "Count of Movies")
ggplot(movies, aes(x = as.numeric(year))) +
stat_summary(fun = "length", geom = "point", aes(y = year)) +
labs(title = "Table 3: Count of Movies per Year as numeric", x = "Year", y = "Count of Movies")
ggplot(na.omit(movies), aes(x = year, y = rating)) +
geom_pointrange(stat = "summary", fun.data = mean_cl_boot) +
labs(title = "Table 4: Average Ratings per Year",
x = "Year",
y = "Rating")
genres_subset <- movies[, c("year", "Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short")]
genres_melt <- melt(genres_subset, id.vars = "year", variable.name = "genre", value.name = "count")
genres_melt <- subset(genres_melt, count == 1)
ggplot(genres_melt , aes(x = year, group = genre, color = genre)) +
stat_summary(geom = "line", position = "stack", fun = "length", aes(y = count)) +
labs(title = "Table 5: Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies") +
theme_minimal()
ggplot(genres_melt, aes(x = year, fill = genre)) +
stat_summary(geom = "area", position = "stack", fun = "length", aes(y = count)) +
labs(title = "Table 6: Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies") +
theme_minimal()
# Reshape the data from wide to long format
genres_melt = melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
genres_subset = subset(movies_melted, value == 1)
# Count the occurrences of each genre per year
genre = aggregate(value ~ year + variable, data = movies_subset, FUN = length)
colnames(genre) = c("year", "genre", "count")
# Find the 5 most common genres
top_genres = movies %>%
select(Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%
summarise_all(list(~sum(. > 0))) %>%
gather(key = "genre", value = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Reshape the data and calculate average ratings per year and genre for the top genres
ratings=movies %>%
select(year, rating, all_of(top_genres)) %>%
gather(key = "genre", value = "has_genre", -year, -rating) %>%
filter(has_genre > 0) %>%
group_by(year, genre) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE))
# Plot the line chart
ggplot(ratings, aes(x = year, y = avg_rating, color = genre, group = genre)) +
geom_line() +
labs(title = "Average Ratings per Year and Genre",
x = "Year",
y = "Average Rating",
color = "Genre") +
theme_minimal()
library(ggplot2)
library(plyr)
library(dplyr)
library(reshape2)
library(Hmisc)
library(tidyr)
movies <- read.table(file='moviesA.csv', header = TRUE, sep = ",")
head(movies)
movies0020 <- movies %>% filter(year >= 1900 & year <= 1920)
ggplot(data = movies0020, aes(x = as.factor(year))) +
geom_bar(width = 0.5,
fill = "lightgreen",
color = "black",
alpha = 0.8,
position = "dodge") +
labs(title = "Table 1: Movies from 1900 to 1920", x = "Year", y = "Count of Movies")
ggplot(movies, aes(x = as.factor(year))) +
stat_summary(fun = "length", geom = "point", aes(y = year)) +
labs(title = "Table 2: Count of Movies per Year as factor", x = "Year", y = "Count of Movies")
ggplot(movies, aes(x = as.numeric(year))) +
stat_summary(fun = "length", geom = "point", aes(y = year)) +
labs(title = "Table 3: Count of Movies per Year as numeric", x = "Year", y = "Count of Movies")
ggplot(na.omit(movies), aes(x = year, y = rating)) +
geom_pointrange(stat = "summary", fun.data = mean_cl_boot) +
labs(title = "Table 4: Average Ratings per Year",
x = "Year",
y = "Rating")
genres_subset <- movies[, c("year", "Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short")]
genres_melt <- melt(genres_subset, id.vars = "year", variable.name = "genre", value.name = "count")
genres_melt <- subset(genres_melt, count == 1)
ggplot(genres_melt , aes(x = year, group = genre, color = genre)) +
stat_summary(geom = "line", position = "stack", fun = "length", aes(y = count)) +
labs(title = "Table 5: Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies") +
theme_minimal()
ggplot(genres_melt, aes(x = year, fill = genre)) +
stat_summary(geom = "area", position = "stack", fun = "length", aes(y = count)) +
labs(title = "Table 6: Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies") +
theme_minimal()
# Reshape the data from wide to long format
genres_melt = melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
genres_subset = subset(movies_melted, value == 1)
# Reshape the data from wide to long format
genres_melt = melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
genres_subset = subset(genres_melt, value == 1)
# Count the occurrences of each genre per year
genre = aggregate(value ~ year + variable, data = movies_subset, FUN = length)
# Reshape the data from wide to long format
genres_melt = melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
# Subset the data to include only rows where the genre indicator is 1
genres_subset = subset(genres_melt, value == 1)
# Count the occurrences of each genre per year
genre = aggregate(value ~ year + variable, data = genres_subset, FUN = length)
colnames(genre) = c("year", "genre", "count")
# Find the 5 most common genres
top_genres = movies %>%
select(Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%
summarise_all(list(~sum(. > 0))) %>%
gather(key = "genre", value = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
# Reshape the data and calculate average ratings per year and genre for the top genres
ratings=movies %>%
select(year, rating, all_of(top_genres)) %>%
gather(key = "genre", value = "has_genre", -year, -rating) %>%
filter(has_genre > 0) %>%
group_by(year, genre) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE))
# Plot the line chart
ggplot(ratings, aes(x = year, y = avg_rating, color = genre, group = genre)) +
geom_line() +
labs(title = "Average Ratings per Year and Genre",
x = "Year",
y = "Average Rating",
color = "Genre") +
theme_minimal()
genres_melt = melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
genres_subset = subset(genres_melt, value == 1)
genre = aggregate(value ~ year + variable, data = genres_subset, FUN = length)
colnames(genre) = c("year", "genre", "count")
top_genres = movies %>%
select(Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%
summarise_all(list(~sum(. > 0))) %>%
gather(key = "genre", value = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
ggplot(ratings, aes(x = year, y = avg_rating, color = genre, group = genre)) +
geom_line() +
labs(title = "Average Ratings per Year and Genre",
x = "Year",
y = "Average Rating",
color = "Genre") +
theme_minimal()
library(ggplot2)
library(plyr)
library(dplyr)
library(reshape2)
library(Hmisc)
library(tidyr)
movies <- read.table(file='moviesA.csv', header = TRUE, sep = ",")
head(movies)
movies0020 <- movies %>% filter(year >= 1900 & year <= 1920)
ggplot(data = movies0020, aes(x = as.factor(year))) +
geom_bar(width = 0.5,
fill = "lightgreen",
color = "black",
alpha = 0.8,
position = "dodge") +
labs(title = "Table 1: Movies from 1900 to 1920", x = "Year", y = "Count of Movies")
ggplot(movies, aes(x = as.factor(year))) +
stat_summary(fun = "length", geom = "point", aes(y = year)) +
labs(title = "Table 2: Count of Movies per Year as factor", x = "Year", y = "Count of Movies")
ggplot(movies, aes(x = as.numeric(year))) +
stat_summary(fun = "length", geom = "point", aes(y = year)) +
labs(title = "Table 3: Count of Movies per Year as numeric", x = "Year", y = "Count of Movies")
ggplot(na.omit(movies), aes(x = year, y = rating)) +
geom_pointrange(stat = "summary", fun.data = mean_cl_boot) +
labs(title = "Table 4: Average Ratings per Year",
x = "Year",
y = "Rating")
genres_subset <- movies[, c("year", "Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short")]
genres_melt <- melt(genres_subset, id.vars = "year", variable.name = "genre", value.name = "count")
genres_melt <- subset(genres_melt, count == 1)
ggplot(genres_melt , aes(x = year, group = genre, color = genre)) +
stat_summary(geom = "line", position = "stack", fun = "length", aes(y = count)) +
labs(title = "Table 5: Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies") +
theme_minimal()
ggplot(genres_melt, aes(x = year, fill = genre)) +
stat_summary(geom = "area", position = "stack", fun = "length", aes(y = count)) +
labs(title = "Table 6: Number of Movies per Year and Genre",
x = "Year",
y = "Number of Movies") +
theme_minimal()
genres_melt = melt(movies, id.vars=c("year"), measure.vars=c("Action", "Animation", "Comedy", "Drama", "Documentary", "Romance", "Short"))
genres_subset = subset(genres_melt, value == 1)
genre = aggregate(value ~ year + variable, data = genres_subset, FUN = length)
colnames(genre) = c("year", "genre", "count")
top_genres = movies %>%
select(Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%
summarise_all(list(~sum(. > 0))) %>%
gather(key = "genre", value = "count") %>%
arrange(desc(count)) %>%
head(5) %>%
pull(genre)
ratings = movies %>%
select(year, rating, all_of(top_genres)) %>%
gather(key = "genre", value = "has_genre", -year, -rating) %>%
filter(has_genre > 0) %>%
group_by(year, genre) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE))
ggplot(ratings, aes(x = year, y = avg_rating, color = genre, group = genre)) +
geom_line() +
labs(title = "Table 7: Average Ratings per Genre per Year",
x = "Year",
y = "Average Rating",
color = "Genre") +
theme_minimal()
