"0","# First, let's use the if-else condition to find NA values within the region in expenditures dataset, then change each to a workable NA as character."
"0","expenditures$region <- ifelse(is.na(expenditures$region), ""NA"", as.character(expenditures$region))"
"0",""
"0","# general.pop: Let's create the data frame for our general population for each region."
"0","general.pop <- as.data.frame(prop.table(table(expenditures$region)) * 100) # Note that I multiplied the result by 100 to present it as percentage."
"0","# Let's name the columns Region and general.pop."
"0","names(general.pop) <- c(""Region"", ""general.pop"")"
"0",""
"0","#rich.pop: Next, Let's create the data frame for our rich population for each region."
"0","rich.pop <- as.data.frame(prop.table(table(expenditures$region[expenditures$income.rank > 0.96])) * 100)# Note that I multiplied the result by 100 to present it as percentage."
"0",""
"0","# Let's also name the columns Region and rich.pop."
"0","names(rich.pop) <- c(""Region"", ""rich.pop"")"
"0",""
"0","# Finally, let us merge the 2 data frames we created. And we're going to call it df_region.data. "
"0","df_region.data <- merge(general.pop, rich.pop, by = ""Region"", all = TRUE)"
"0",""
"0","# We can now display the data frame using kable function. We're going to name the 3 columngs Region, General Population, and Rich Population for easy readability."
"0","kable(df_region.data, digits = 3, col.names = c(""Region"", ""General Population"", ""Rich Population""))"
